Description:
  This generator installs controller support for comments nested inside a
  commentable resource using a shallow routing setup.
  - It generates a controller that supports the two actions :index and :create
    (JSON format only) from within the context of the commentable resource.
  - It adds a nested routing rule in the application's config/routes.rb file
    that dispatches to the controller for those two actions.
  - It adds code in the commentable resource's class that enables comment
    management.

  Note that the generated controller will likely still need to be modified, for
  example to add authentication checks.
  
  The commentable class will have to be modified to add access checks for the
  comment operations :comment_index and :comment_create.

Arguments:
  COMMENTABLE_CLASS # The name of the class that will provide the nesting 
  		    # context for the controller. The default is 'Commentable'
		    # and is almost guaranteed to be incorrect.

Example:
  rails generate fl:framework:comments My::Article

  The generator will create:
    app/controllers/my/article_comments_controller.rb

  It will then add the following entry in the routes.rb file if it does not find
  a 'resources :articles' directive:
    namespace :my do
      resources :articles do
        resources :comments, only: [ :index, :create ], :controller => article_comments'
      end
    end
  If it does find a 'resources :articles' rule, then it inserts the
  'resources :comments' directive in the 'resources :articles' block (and
  creates the block if necessary). In this example, the rule
    namespace :my do
      resources :articles
    end
  will be converted to:
    namespace :my do
      resources :articles do
        resources :comments, only: [ :index, :create ], :controller => article_comments'
      end
    end

  Finally, it will attempt to enable comment support in My::Article by editing
    app/models/my/article.rb
  If comments have not been enabled yet, it adds the following fragment to the
  class definition:
    include Fl::Framework::Access::Access unless define?(Fl::Framework::Access::Access)
    include Fl::Framework::Comment::Commentable
    include Fl::Framework::Comment::ActiveRecord::Commentable
    has_comments
